// Traffic Light Control for 4-Sided Road

int red[4] = {A0, A3, 8, 11};   // Assign available pins
int yellow[4] = {A1, A4, 9, 12};
int green[4] = {A2, A5, 10, 13};

int yellowTime = 1; // Means 20 sec
int TransfireTime = 5; // Means 60 sec

void setup() {
  for (int i = 0; i <= 13; i++) {
    pinMode(i, OUTPUT); // Set all pins from 0 to 13 as OUTPUT
  }
  
  for (int i = 0; i < 4; i++) {
    pinMode(red[i], OUTPUT);
    pinMode(yellow[i], OUTPUT);
    pinMode(green[i], OUTPUT);
    digitalWrite(red[i], LOW);
    digitalWrite(yellow[i], LOW);
    digitalWrite(green[i], LOW);
  }
}

// The array contains all the binary numbers for SSD digits 0 to 9
const int number[11] = {0b0111111, 0b0000110, 0b1011011, 0b1001111, 0b1100110, 0b1101101, 0b1111101, 0b0000111, 0b1111111, 0b1101111};

void loop() {
  for (int i = 0; i < 4; i++) {
    handleTraffic(i);
  }
}

void handleTraffic(int side) {
  Red(side);
  Green(side);
}

void display(const int from) {
  for (int tens = from; tens >= 0; tens--) {
    display_tens(tens);
  }
}

void display_tens(const int tens) {
  int pin1, a, ones;
  
  for (pin1 = 0, a = 0; pin1 < 7; pin1++, a++) {
    digitalWrite(pin1, bitRead(number[tens], a));
  }
  
  for (ones = 10; ones >= 0; ones--) {
    display_ones(ones);
    delay(1000); 
  }
}

void display_ones(const int x) {
  int pin2, b;
  
  for (pin2 = 7, b = 0; pin2 <= 13; pin2++, b++) {
    digitalWrite(pin2, bitRead(number[x], b));
  }
}

void Red(int side) {
  digitalWrite(red[side], HIGH);
  digitalWrite(yellow[side], LOW);
  digitalWrite(green[side], LOW);
  display(TransfireTime);

  digitalWrite(red[side], HIGH);
  digitalWrite(yellow[side], HIGH);
  digitalWrite(green[side], LOW);
  display(yellowTime);

  digitalWrite(red[side], LOW);
  digitalWrite(yellow[side], LOW);
  digitalWrite(green[side], LOW);
}

void Green(int side) {
  digitalWrite(red[side], LOW);
  digitalWrite(yellow[side], LOW);
  digitalWrite(green[side], HIGH);
  display(TransfireTime);

  digitalWrite(red[side], LOW);
  digitalWrite(yellow[side], HIGH);
  digitalWrite(green[side], HIGH);
  display(yellowTime);

  digitalWrite(red[side], LOW);
  digitalWrite(yellow[side], LOW);
  digitalWrite(green[side], LOW);
}